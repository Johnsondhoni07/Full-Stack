{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initial = {\n  counter: 0,\n  showCounter: true\n};\nconst CounterSlice = createSlice({\n  name: counter,\n  initial,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toogle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: CounterSlice.reducer\n  }\n});\nexport const CounterAction = CounterSlice.actions;\nexport default store; // const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };","map":{"version":3,"sources":["/var/www/html/React/Redux_Counter/src/store/index.js"],"names":["createSlice","configureStore","initial","counter","showCounter","CounterSlice","name","reducers","increment","state","decrement","increase","action","payload","toogle","store","reducer","CounterAction","actions"],"mappings":"AAAA;AACA,SAAQA,WAAR,EAAqBC,cAArB,QAA2C,kBAA3C;AACA,MAAMC,OAAO,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAAhB;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAE;AAChCM,EAAAA,IAAI,EAACH,OAD2B;AAEhCD,EAAAA,OAFgC;AAGhCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACN,OAAN;AAAgB,KADzB;;AAERO,IAAAA,SAAS,CAACD,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACN,OAAN;AAAgB,KAFzB;;AAGRQ,IAAAA,QAAQ,CAACF,KAAD,EAAOG,MAAP,EAAc;AAACH,MAAAA,KAAK,CAACN,OAAN,GAAcM,KAAK,CAACN,OAAN,GAAcS,MAAM,CAACC,OAAnC;AAA2C,KAH1D;;AAIRC,IAAAA,MAAM,CAACL,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACL,WAAN,GAAkB,CAACK,KAAK,CAACL,WAAzB;AAAqC;;AAJ3C;AAHsB,CAAF,CAAhC;AAYA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AAACe,EAAAA,OAAO,EAAC;AAACb,IAAAA,OAAO,EAACE,YAAY,CAACW;AAAtB;AAAT,CAAD,CAA5B;AAEA,OAAO,MAAMC,aAAa,GAACZ,YAAY,CAACa,OAAjC;AACP,eAAeH,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { createStore } from \"redux\";\nimport {createSlice, configureStore } from '@reduxjs/toolkit'\nconst initial = { counter: 0, showCounter: true };\nconst CounterSlice = createSlice ({\n  name:counter,\n  initial,\n  reducers: {\n    increment(state){state.counter++},\n    decrement(state){state.counter++},\n    increase(state,action){state.counter=state.counter+action.payload},\n    toogle(state){state.showCounter=!state.showCounter}\n  }\n})\n\n\nconst store = configureStore({reducer:{counter:CounterSlice.reducer}});\n\nexport const CounterAction=CounterSlice.actions;\nexport default store;\n\n// const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };\n"]},"metadata":{},"sourceType":"module"}