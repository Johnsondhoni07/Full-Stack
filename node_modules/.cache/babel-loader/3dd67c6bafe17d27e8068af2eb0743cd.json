{"ast":null,"code":"import { createStore } from 'redux';\nconst initial = {\n  counter: 0,\n  show: true\n};\n\nconst CounterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  ;\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount\n    };\n  }\n\n  return state;\n};\n\n_c = CounterReducer;\nconst store = createStore(CounterReducer);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterReducer\");","map":{"version":3,"sources":["/var/www/html/React/Redux_Counter/src/store/index.js"],"names":["createStore","initial","counter","show","CounterReducer","state","action","type","amount","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,MAAMC,OAAO,GAAC;AAACC,EAAAA,OAAO,EAAC,CAAT;AAAWC,EAAAA,IAAI,EAAC;AAAhB,CAAd;;AACA,MAAMC,cAAc,GAAG,YAA8B;AAAA,MAA7BC,KAA6B,uEAAvB;AAACH,IAAAA,OAAO,EAAC;AAAT,GAAuB;AAAA,MAAXI,MAAW;;AACjD,MAAGA,MAAM,CAACC,IAAP,KAAc,WAAjB,EAA6B;AAC7B,WAAO;AACHL,MAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAc;AADrB,KAAP;AAGH;;AAAA;;AACG,MAAGI,MAAM,CAACC,IAAP,KAAc,WAAjB,EAA6B;AAC7B,WAAO;AACHL,MAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAc;AADrB,KAAP;AAGH;;AACG,MAAGI,MAAM,CAACC,IAAP,KAAc,UAAjB,EAA4B;AAC5B,WAAO;AACHL,MAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;AAD9B,KAAP;AAGH;;AACD,SAAOH,KAAP;AACC,CAjBD;;KAAMD,c;AAoBN,MAAMK,KAAK,GAACT,WAAW,CAACI,cAAD,CAAvB;AACA,eAAeK,KAAf","sourcesContent":["import {createStore} from 'redux';\nconst initial={counter:0,show:true}\nconst CounterReducer = (state={counter:0},action) => {\n    if(action.type==='increment'){\n    return {\n        counter : state.counter+1\n    };\n};\n    if(action.type==='decrement'){\n    return {\n        counter : state.counter-1\n    };\n}\n    if(action.type==='increase'){\n    return {\n        counter : state.counter + action.amount \n    };\n}\nreturn state;\n}   \n\n\nconst store=createStore(CounterReducer);\nexport default store;"]},"metadata":{},"sourceType":"module"}