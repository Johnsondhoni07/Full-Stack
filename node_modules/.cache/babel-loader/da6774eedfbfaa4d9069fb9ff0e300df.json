{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialauth = {\n  isauthenticated: false\n};\nconst AuthSlice = createSlice({\n  name: \"Auth\",\n  initialState: initialauth,\n  reducers: {\n    login(state) {\n      state.isauthenticated = true;\n    },\n\n    logout(state) {\n      state.isauthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: CounterSlice.reducer,\n    auth: AuthSlice.reducer\n  }\n});\nexport const CounterAction = CounterSlice.actions;\nexport const AuthAction = AuthSlice.actions;\nexport default store; // const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };","map":{"version":3,"sources":["/var/www/html/React/Redux_Counter/src/store/index.js"],"names":["createSlice","configureStore","initialauth","isauthenticated","AuthSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","CounterSlice","auth","CounterAction","actions","AuthAction"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAIA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAApB;AACA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAEJ,WAFc;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACD,KAHO;;AAIRO,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACD;;AANO;AAHkB,CAAD,CAA7B;AAaA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;AAC3BW,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEC,YAAY,CAACF,OADf;AAEPG,IAAAA,IAAI,EAAEX,SAAS,CAACQ;AAFT;AADkB,CAAD,CAA5B;AAOA,OAAO,MAAMI,aAAa,GAAGF,YAAY,CAACG,OAAnC;AACP,OAAO,MAAMC,UAAU,GAAGd,SAAS,CAACa,OAA7B;AAEP,eAAeN,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\n\n\nconst initialauth = { isauthenticated: false, };\nconst AuthSlice = createSlice({\n  name: \"Auth\",\n  initialState: initialauth,\n  reducers: {\n    login(state) {\n      state.isauthenticated = true;\n    },\n    logout(state) {\n      state.isauthenticated = false;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    counter: CounterSlice.reducer,\n    auth: AuthSlice.reducer,\n  },\n});\n\nexport const CounterAction = CounterSlice.actions;\nexport const AuthAction = AuthSlice.actions;\n\nexport default store;\n\n// const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };\n"]},"metadata":{},"sourceType":"module"}