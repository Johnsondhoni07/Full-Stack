{"ast":null,"code":"// import { createSlice } from '@reduxjs/toolkit';\n// const cartSlice = createSlice({\n//   name: 'cart',\n//   initialState: {\n//     items: [],\n//     totalQuantity: 0,\n//   },\n//   reducers: {\n//     addItemToCart(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\n//       state.totalQuantity++;\n//       if (!existingItem) {\n//         state.items.push({\n//           id: newItem.id,\n//           price: newItem.price,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title\n//         });\n//       } else {\n//         existingItem.quantity++;\n//         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n//       }\n//     },\n//     removeItemFromCart(state, action) {\n//       const id = action.payload;\n//       const existingItem = state.items.find(item => item.id === id);\n//       state.totalQuantity--;\n//       if (existingItem.quantity === 1) {\n//         state.items = state.items.filter(item => item.id !== id);\n//       } else {\n//         existingItem.quantity--;\n//       }\n//     },\n//   },\n// });\n// export const cartActions = cartSlice.actions;\n// export default cartSlice;\n// import { createSlice } from \"@reduxjs/toolkit\";\n// // const initial = {\n// //   item: [null],\n// //   totalquantity: 0,\n// // };\n// const val = \"yes\";\n// const cartSlice = createSlice({\n//   name: \"cart\",\n//   initialstate: val,\n//   reducers: {\n//     addItemToCard(state, action) {\n//       const newItem = action.payload;\n//       const existing = state.item.find((item) => item.id === newItem.id);\n//       state.totalquantity++;\n//       if (!existing) {\n//         state.item.push({\n//           id: newItem.id,\n//           title: newItem.title,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title,\n//         });\n//       } else {\n//         existing.quantity++;\n//         // existing.totalprice = existing.totalPrice + newItem.price;\n//       }\n//     },\n//   },\n//   removeItemFromCart(state, action) {\n//     const id = action.payload;\n//     const existing = state.item.find((item) => item.id === id);\n//     state.totalquantity--;\n//     if (existing.quantity === 1) {\n//       state.item = state.item.filter((item) => item.id != id);\n//     } else {\n//       existing.quantity--;\n//     }\n//   },\n// });\n// export const cartActions = cartSlice.actions;\n// export default cartSlice;","map":{"version":3,"sources":["/var/www/html/React/01-starting-project/src/Store/cart-slice.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { createSlice } from '@reduxjs/toolkit';\n\n// const cartSlice = createSlice({\n//   name: 'cart',\n//   initialState: {\n//     items: [],\n//     totalQuantity: 0,\n//   },\n//   reducers: {\n//     addItemToCart(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\n//       state.totalQuantity++;\n//       if (!existingItem) {\n//         state.items.push({\n//           id: newItem.id,\n//           price: newItem.price,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title\n//         });\n//       } else {\n//         existingItem.quantity++;\n//         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n//       }\n//     },\n//     removeItemFromCart(state, action) {\n//       const id = action.payload;\n//       const existingItem = state.items.find(item => item.id === id);\n//       state.totalQuantity--;\n//       if (existingItem.quantity === 1) {\n//         state.items = state.items.filter(item => item.id !== id);\n//       } else {\n//         existingItem.quantity--;\n//       }\n//     },\n//   },\n// });\n\n// export const cartActions = cartSlice.actions;\n\n// export default cartSlice;\n// import { createSlice } from \"@reduxjs/toolkit\";\n// // const initial = {\n// //   item: [null],\n// //   totalquantity: 0,\n// // };\n// const val = \"yes\";\n// const cartSlice = createSlice({\n//   name: \"cart\",\n//   initialstate: val,\n//   reducers: {\n//     addItemToCard(state, action) {\n//       const newItem = action.payload;\n//       const existing = state.item.find((item) => item.id === newItem.id);\n//       state.totalquantity++;\n//       if (!existing) {\n//         state.item.push({\n//           id: newItem.id,\n//           title: newItem.title,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title,\n//         });\n//       } else {\n//         existing.quantity++;\n//         // existing.totalprice = existing.totalPrice + newItem.price;\n//       }\n//     },\n//   },\n//   removeItemFromCart(state, action) {\n//     const id = action.payload;\n//     const existing = state.item.find((item) => item.id === id);\n//     state.totalquantity--;\n//     if (existing.quantity === 1) {\n//       state.item = state.item.filter((item) => item.id != id);\n//     } else {\n//       existing.quantity--;\n//     }\n//   },\n// });\n\n// export const cartActions = cartSlice.actions;\n\n// export default cartSlice;\n"]},"metadata":{},"sourceType":"module"}