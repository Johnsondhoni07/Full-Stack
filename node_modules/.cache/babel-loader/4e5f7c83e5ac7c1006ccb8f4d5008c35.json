{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialcounter = {\n  counter: 0,\n  showCounter: true\n};\nconst initialauth = {\n  isauthenticated: false\n};\nconst CounterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialcounter,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      console.log(action.payload);\n      state.counter = state.counter + action.payload;\n    },\n\n    toogle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst AuthSlice = createSlice({\n  name: \"Auth\",\n  initialState: initialauth,\n  reducers: {\n    login(state) {\n      state.isauthenticated = true;\n    },\n\n    logout(state) {\n      state.isauthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: CounterSlice.reducer,\n    auth: CounterSlice.reducer\n  }\n});\nexport const CounterAction = CounterSlice.actions;\nexport const CounterAuth = AuthSlice.actions;\nexport default store; // const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };","map":{"version":3,"sources":["/var/www/html/React/Redux_Counter/src/store/index.js"],"names":["createSlice","configureStore","initialcounter","counter","showCounter","initialauth","isauthenticated","CounterSlice","name","initialState","reducers","increment","state","decrement","increase","action","console","log","payload","toogle","AuthSlice","login","logout","store","reducer","auth","CounterAction","actions","CounterAuth"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,cAAc,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAAvB;AACA,MAAMC,WAAW,GAAC;AAACC,EAAAA,eAAe,EAAC;AAAjB,CAAlB;AAEA,MAAMC,YAAY,GAAGP,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEP,cAFiB;AAG/BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACT,OAAN;AACD,KAHO;;AAIRU,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACT,OAAN;AACD,KANO;;AAORW,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACAN,MAAAA,KAAK,CAACT,OAAN,GAAgBS,KAAK,CAACT,OAAN,GAAgBY,MAAM,CAACG,OAAvC;AACD,KAVO;;AAWRC,IAAAA,MAAM,CAACP,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACR,WAAN,GAAoB,CAACQ,KAAK,CAACR,WAA3B;AACD;;AAbO;AAHqB,CAAD,CAAhC;AAmBA,MAAMgB,SAAS,GAAGpB,WAAW,CAAE;AAC7BQ,EAAAA,IAAI,EAAC,MADwB;AAE7BC,EAAAA,YAAY,EAACJ,WAFgB;AAG7BK,EAAAA,QAAQ,EAAC;AACPW,IAAAA,KAAK,CAACT,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACN,eAAN,GAAsB,IAAtB;AAA2B,KADjC;;AAEPgB,IAAAA,MAAM,CAACV,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACN,eAAN,GAAsB,KAAtB;AAA4B;;AAFnC;AAHoB,CAAF,CAA7B;AASA,MAAMiB,KAAK,GAAGtB,cAAc,CAAC;AAC1BuB,EAAAA,OAAO,EAAE;AACNrB,IAAAA,OAAO,EAAEI,YAAY,CAACiB,OADhB;AAENC,IAAAA,IAAI,EAAClB,YAAY,CAACiB;AAFZ;AADiB,CAAD,CAA5B;AAOA,OAAO,MAAME,aAAa,GAAGnB,YAAY,CAACoB,OAAnC;AACP,OAAO,MAAMC,WAAW,GAACR,SAAS,CAACO,OAA5B;AAEP,eAAeJ,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialcounter = { counter: 0, showCounter: true };\nconst initialauth={isauthenticated:false}\n\nconst CounterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialcounter,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      console.log(action.payload);\n      state.counter = state.counter + action.payload;\n    },\n    toogle(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\nconst AuthSlice = createSlice ({\n  name:\"Auth\",\n  initialState:initialauth,\n  reducers:{\n    login(state){state.isauthenticated=true},\n    logout(state){state.isauthenticated=false}\n  }\n})\n\nconst store = configureStore({\n   reducer: {\n      counter: CounterSlice.reducer,\n      auth:CounterSlice.reducer \n    } \n  });\n\nexport const CounterAction = CounterSlice.actions;\nexport const CounterAuth=AuthSlice.actions;\n\nexport default store;\n\n// const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };\n"]},"metadata":{},"sourceType":"module"}