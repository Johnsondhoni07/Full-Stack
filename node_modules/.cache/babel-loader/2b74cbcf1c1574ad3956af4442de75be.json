{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initial = {\n  item: [{\n    title: ''\n  }],\n  totalquantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialstate: initial,\n  reducers: {\n    addItemToCard(state, action) {\n      const newItem = action.payload;\n      const existing = state.item.find(item => item.id === newItem.id);\n      state.totalquantity++;\n\n      if (!existing) {\n        state.item.push({\n          id: newItem.id,\n          title: newItem.title,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existing.quantity++; // existing.totalprice = existing.totalPrice + newItem.price;\n      }\n    }\n\n  },\n\n  removeItemFromCart(state, action) {\n    const id = action.payload;\n    const existing = state.item.find(item => item.id === id);\n    state.totalquantity--;\n\n    if (existing.quantity === 1) {\n      state.item = state.item.filter(item => item.id != id);\n    } else {\n      existing.quantity--;\n    }\n  }\n\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/var/www/html/React/01-starting-project/src/Store/cart-slice.js"],"names":["createSlice","initial","item","title","totalquantity","cartSlice","name","initialstate","reducers","addItemToCard","state","action","newItem","payload","existing","find","id","push","quantity","totalPrice","price","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,CACF;AACIC,IAAAA,KAAK,EAAC;AADV,GADE,CADQ;AAMdC,EAAAA,aAAa,EAAE;AAND,CAAhB;AAQA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAEN,OAFc;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,QAAQ,GAAGJ,KAAK,CAACR,IAAN,CAAWa,IAAX,CAAgBb,IAAI,IAAIA,IAAI,CAACc,EAAL,KAAYJ,OAAO,CAACI,EAA5C,CAAjB;AACAN,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAI,CAACU,QAAL,EAAe;AACbJ,QAAAA,KAAK,CAACR,IAAN,CAAWe,IAAX,CAAgB;AACdD,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EADE;AAEdb,UAAAA,KAAK,EAAES,OAAO,CAACT,KAFD;AAGde,UAAAA,QAAQ,EAAE,CAHI;AAIdC,UAAAA,UAAU,EAAEP,OAAO,CAACQ,KAJN;AAKdd,UAAAA,IAAI,EAAEM,OAAO,CAACT;AALA,SAAhB;AAOD,OARD,MAQO;AACLW,QAAAA,QAAQ,CAACI,QAAT,GADK,CAEL;AACD;AACF;;AAjBO,GAHkB;;AAsB5BG,EAAAA,kBAAkB,CAACX,KAAD,EAAQC,MAAR,EAAgB;AAChC,UAAMK,EAAE,GAAGL,MAAM,CAACE,OAAlB;AACA,UAAMC,QAAQ,GAAGJ,KAAK,CAACR,IAAN,CAAWa,IAAX,CAAgBb,IAAI,IAAIA,IAAI,CAACc,EAAL,KAAYA,EAApC,CAAjB;AACAN,IAAAA,KAAK,CAACN,aAAN;;AACA,QAAIU,QAAQ,CAACI,QAAT,KAAsB,CAA1B,EAA6B;AAC3BR,MAAAA,KAAK,CAACR,IAAN,GAAaQ,KAAK,CAACR,IAAN,CAAWoB,MAAX,CAAkBpB,IAAI,IAAIA,IAAI,CAACc,EAAL,IAAWA,EAArC,CAAb;AACD,KAFD,MAEO;AACLF,MAAAA,QAAQ,CAACI,QAAT;AACD;AACF;;AA/B2B,CAAD,CAA7B;AAkCA,OAAO,MAAMK,WAAW,GAAGlB,SAAS,CAACmB,OAA9B;AAEP,eAAenB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initial = {\n  item: [\n      {\n          title:''\n      }\n  ],\n  totalquantity: 0,\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialstate: initial,\n  reducers: {\n    addItemToCard(state, action) {\n      const newItem = action.payload;\n      const existing = state.item.find(item => item.id === newItem.id);\n      state.totalquantity++;\n      if (!existing) {\n        state.item.push({\n          id: newItem.id,\n          title: newItem.title,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existing.quantity++;\n        // existing.totalprice = existing.totalPrice + newItem.price;\n      }\n    },\n  },\n  removeItemFromCart(state, action) {\n    const id = action.payload;\n    const existing = state.item.find(item => item.id === id);\n    state.totalquantity--;\n    if (existing.quantity === 1) {\n      state.item = state.item.filter(item => item.id != id);\n    } else {\n      existing.quantity--;\n    }\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}