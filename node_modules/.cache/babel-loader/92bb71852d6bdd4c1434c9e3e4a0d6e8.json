{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialstate: {\n    item: [{\n      id: '',\n      title: '',\n      quantity: 1,\n      totalPrice: newItem.price,\n      name: newItem.title\n    }],\n    totalquantity: 0\n  },\n  reducers: {\n    addItemToCard(state, action) {\n      const newItem = action.payload;\n      const existing = state.item.find(item => item.id === newItem.id);\n      state.totalquantity++;\n\n      if (!existing) {\n        state.item.push({\n          id: newItem.id,\n          title: newItem.id,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existing.quantity++; // existing.totalprice = existing.totalPrice + newItem.price;\n      }\n    }\n\n  },\n\n  removeItemFromCart(state, action) {\n    const id = action.payload;\n    const existing = state.item.find(item => item.id === id);\n    state.totalquantity--;\n\n    if (existing.quantity === 1) {\n      state.item = state.item.filter(item => item.id != id);\n    } else {\n      existing.quantity--;\n    }\n  }\n\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/var/www/html/React/01-starting-project/src/Store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialstate","item","id","title","quantity","totalPrice","newItem","price","totalquantity","reducers","addItemToCard","state","action","payload","existing","find","push","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,CAAC;AACHC,MAAAA,EAAE,EAAE,EADD;AAEHC,MAAAA,KAAK,EAAC,EAFH;AAGHC,MAAAA,QAAQ,EAAE,CAHP;AAIHC,MAAAA,UAAU,EAAEC,OAAO,CAACC,KAJjB;AAKHR,MAAAA,IAAI,EAAEO,OAAO,CAACH;AALX,KAAD,CADM;AAQZK,IAAAA,aAAa,EAAE;AARH,GAFc;AAY5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMN,OAAO,GAAGM,MAAM,CAACC,OAAvB;AACA,YAAMC,QAAQ,GAAGH,KAAK,CAACV,IAAN,CAAWc,IAAX,CAAiBd,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYI,OAAO,CAACJ,EAA9C,CAAjB;AACAS,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAI,CAACM,QAAL,EAAe;AACbH,QAAAA,KAAK,CAACV,IAAN,CAAWe,IAAX,CAAgB;AACdd,UAAAA,EAAE,EAAEI,OAAO,CAACJ,EADE;AAEdC,UAAAA,KAAK,EAAEG,OAAO,CAACJ,EAFD;AAGdE,UAAAA,QAAQ,EAAE,CAHI;AAIdC,UAAAA,UAAU,EAAEC,OAAO,CAACC,KAJN;AAKdR,UAAAA,IAAI,EAAEO,OAAO,CAACH;AALA,SAAhB;AAOD,OARD,MAQO;AACLW,QAAAA,QAAQ,CAACV,QAAT,GADK,CAEL;AACD;AACF;;AAjBO,GAZkB;;AA+B5Ba,EAAAA,kBAAkB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAChC,UAAMV,EAAE,GAAGU,MAAM,CAACC,OAAlB;AACA,UAAMC,QAAQ,GAAGH,KAAK,CAACV,IAAN,CAAWc,IAAX,CAAiBd,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAtC,CAAjB;AACAS,IAAAA,KAAK,CAACH,aAAN;;AACA,QAAGM,QAAQ,CAACV,QAAT,KAAoB,CAAvB,EAAyB;AACrBO,MAAAA,KAAK,CAACV,IAAN,GAAaU,KAAK,CAACV,IAAN,CAAWiB,MAAX,CAAmBjB,IAAD,IAASA,IAAI,CAACC,EAAL,IAAWA,EAAtC,CAAb;AACH,KAFD,MAEK;AACDY,MAAAA,QAAQ,CAACV,QAAT;AACH;AACF;;AAxC2B,CAAD,CAA7B;AA2CA,OAAO,MAAMe,WAAW,GAAErB,SAAS,CAACsB,OAA7B;AAEP,eAAetB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialstate: {\n    item: [{\n        id: '',\n        title:'',\n        quantity: 1,\n        totalPrice: newItem.price,\n        name: newItem.title,\n      }],\n    totalquantity: 0,\n  },\n  reducers: {\n    addItemToCard(state, action) {\n      const newItem = action.payload;\n      const existing = state.item.find((item) => item.id === newItem.id);\n      state.totalquantity++;\n      if (!existing) {\n        state.item.push({\n          id: newItem.id,\n          title: newItem.id,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existing.quantity++;\n        // existing.totalprice = existing.totalPrice + newItem.price;\n      }\n    },\n  },\n  removeItemFromCart(state, action) {\n    const id = action.payload;\n    const existing = state.item.find((item) => item.id === id);\n    state.totalquantity--;\n    if(existing.quantity===1){\n        state.item = state.item.filter((item)=> item.id != id)\n    }else{\n        existing.quantity--;\n    }\n  },\n});\n\nexport const cartActions= cartSlice.actions;\n\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}