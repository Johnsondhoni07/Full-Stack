{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initial = {\n  counter: 0,\n  showCounter: true\n};\nconst CounterSlice = createSlice({\n  name: \"counter\",\n  initialState: initial,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      console.log(10);\n      state.counter = state.counter + action.payload;\n    },\n\n    toogle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: CounterSlice.reducer\n  }\n});\nexport const CounterAction = CounterSlice.actions;\nexport default store; // const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };","map":{"version":3,"sources":["/var/www/html/React/Redux_Counter/src/store/index.js"],"names":["createSlice","configureStore","initial","counter","showCounter","CounterSlice","name","initialState","reducers","increment","state","decrement","increase","action","console","log","payload","toogle","store","reducer","CounterAction","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,OAAO,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAAhB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,OAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAL,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACG,OAAvC;AACD,KAVO;;AAWRC,IAAAA,MAAM,CAACP,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAbO;AAHqB,CAAD,CAAhC;AAoBA,MAAMc,KAAK,GAAGjB,cAAc,CAAC;AAC1BkB,EAAAA,OAAO,EAAE;AACNhB,IAAAA,OAAO,EAAEE,YAAY,CAACc;AADhB;AADiB,CAAD,CAA5B;AAMA,OAAO,MAAMC,aAAa,GAAGf,YAAY,CAACgB,OAAnC;AACP,eAAeH,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initial = { counter: 0, showCounter: true };\n\nconst CounterSlice = createSlice({\n  name: \"counter\",\n  initialState: initial,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      console.log(10);\n      state.counter = state.counter + action.payload;\n    },\n    toogle(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst store = configureStore({\n   reducer: {\n      counter: CounterSlice.reducer \n    } \n  });\n\nexport const CounterAction = CounterSlice.actions;\nexport default store;\n\n// const CounterReducer = (state = initial, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === \"toogle\") {\n//     //   console.log('running');\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n//   return state;\n// };\n"]},"metadata":{},"sourceType":"module"}